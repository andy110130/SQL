
-- 1. Основы реляционной модели и SQL
-- 1.1 Отношение (таблица) 

-- Создание таблицы 

-- ЗАДАНИЕ. Сформулируйте SQL запрос для создания таблицы book, занесите его в окно кода (расположено ниже) и отправьте на проверку (кнопка Отправить). 
-- Структура таблицы book:
-- Поле	       Тип, описание
-- book_id	   INT PRIMARY KEY AUTO_INCREMENT
-- title	     VARCHAR(50)
-- author	     VARCHAR(30)
-- price	     DECIMAL(8, 2)
-- amount	     INT

Create table book(
    book_id INT primary key auto_increment,
    title VARCHAR(50), 
    author VARCHAR(30),
    price DECIMAL(8, 2), 
    amount INT
    );
    
-- Вставка записи в таблицу

--ЗАДАНИЕ. Занесите новую строку в таблицу book (текстовые значения (тип VARCHAR) заключать либо в двойные, либо в одинарные кавычки):

insert into book (book_id, title, author, price, amount) values ( NULL, 'Мастер и Маргарита','Булгаков М.А.', 670.99, 3  );

-- Результат:
-- Affected rows: 1
-- Query result:
-- +---------+--------------------+---------------+--------+--------+
-- | book_id | title              | author        | price  | amount |
-- +---------+--------------------+---------------+--------+--------+
-- | 1       | Мастер и Маргарита | Булгаков М.А. | 670.99 | 3      |
-- +---------+--------------------+---------------+--------+--------+

-- ЗАДАНИЕ. Занесите три последние записи в таблицу book, первая запись уже добавлена на предыдущем шаге:
-- book_id	                          title	              author	          price	        amount
-- INT PRIMARY KEY AUTO_INCREMENT	    VARCHAR(50)	        VARCHAR(30)	      DECIMAL(8,2)	INT
-- 1	                                Мастер и Маргарита	Булгаков М.А.	    670.99	      3
-- 2	                                Белая гвардия	      Булгаков М.А.	    540.50	      5
-- 3	                                Идиот	              Достоевский Ф.М.	460.00	      10
-- 4	                                Братья Карамазовы	  Достоевский Ф.М.	799.01	      2

insert into book ( book_id, title, author, price, amount) values (NUll,'Белая гвардия', 'Булгаков М.А.', 540.50, 5);
insert into book ( book_id, title, author, price, amount) values (NUll,'Идиот', 'Достоевский Ф.М.', 460.00, 10);
insert into book ( book_id, title, author, price, amount) values (NUll,'Братья Карамазовы', 'Достоевский Ф.М.', 799.01, 2);

-- Результат:
-- Affected rows: 1
-- Affected rows: 1
-- Affected rows: 1
-- Query result:
-- +---------+--------------------+------------------+--------+--------+
-- | book_id | title              | author           | price  | amount |
-- +---------+--------------------+------------------+--------+--------+
-- | 1       | Мастер и Маргарита | Булгаков М.А.    | 670.99 | 3      |
-- | 2       | Белая гвардия      | Булгаков М.А.    | 540.50 | 5      |
-- | 3       | Идиот              | Достоевский Ф.М. | 460.00 | 10     |
-- | 4       | Братья Карамазовы  | Достоевский Ф.М. | 799.01 | 2      |
-- +---------+--------------------+------------------+--------+--------+


-- 1.2. Выборка данных 

-- Выборка всех данных их таблицы

-- ЗАДАНИЕ
-- Вывести информацию о всех книгах, хранящихся на складе
-- Для этого: 
-- Напишите SQL запрос в окне кода; 
-- Отправьте на проверку (кнопка  Отправить); 
-- Если запрос работает неверно, исправьте его и снова отправьте на проверку.
-- Важно! В окне кода можно использовать комментарии для сохранения разных вариантов запросов или пояснений. Комментарии заключаются в /* и */
SELECT * FROM book;

-- Результат:

-- +---------+-----------------------+------------------+--------+--------+
-- | book_id | title                 | author           | price  | amount |
-- +---------+-----------------------+------------------+--------+--------+
-- | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
-- | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
-- | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
-- | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
-- | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
-- +---------+-----------------------+------------------+--------+--------+
-- Affected rows: 5

-- Выборка отдельных столбцов

-- Задание
-- Выбрать авторов, название книг и их цену из таблицы book.
select author, title, price  from book;

-- Результат:

-- +------------------+-----------------------+--------+
-- | author           | title                 | price  |
-- +------------------+-----------------------+--------+
-- | Булгаков М.А.    | Мастер и Маргарита    | 670.99 |
-- | Булгаков М.А.    | Белая гвардия         | 540.50 |
-- | Достоевский Ф.М. | Идиот                 | 460.00 |
-- | Достоевский Ф.М. | Братья Карамазовы     | 799.01 |
-- | Есенин С.А.      | Стихотворения и поэмы | 650.00 |
-- +------------------+-----------------------+--------+
-- Affected rows: 5

-- Выборка новых столбцов и присвоение им новых имен

-- Задание
-- Выбрать названия книг и авторов из таблицы book, для поля title задать имя(псевдоним) Название, для поля author –  Автор. 

select title as Название, author as Автор from book;

-- Результат:

-- +-----------------------+------------------+
-- | Название              | Автор            |
-- +-----------------------+------------------+
-- | Мастер и Маргарита    | Булгаков М.А.    |
-- | Белая гвардия         | Булгаков М.А.    |
-- | Идиот                 | Достоевский Ф.М. |
-- | Братья Карамазовы     | Достоевский Ф.М. |
-- | Стихотворения и поэмы | Есенин С.А.      |
-- +-----------------------+------------------+
-- Affected rows: 5

-- Выборка данных с созданием вычисляемого столбца

-- Задание
-- Для упаковки каждой книги требуется один лист бумаги, цена которого 1 рубль 65 копеек. 
-- Посчитать стоимость упаковки для каждой книги (сколько денег потребуется, чтобы упаковать все экземпляры книги). 
-- В запросе вывести название книги, ее количество и стоимость упаковки, последний столбец назвать pack. 

select title, amount, 
amount * 1.65 as pack
from book;

-- Результат:

-- +-----------------------+--------+-------+
-- | title                 | amount | pack  |
-- +-----------------------+--------+-------+
-- | Мастер и Маргарита    | 3      | 4.95  |
-- | Белая гвардия         | 5      | 8.25  |
-- | Идиот                 | 10     | 16.50 |
-- | Братья Карамазовы     | 2      | 3.30  |
-- | Стихотворения и поэмы | 15     | 24.75 |
-- +-----------------------+--------+-------+
-- Affected rows: 5

-- Выборка данных, вычисляемые столбцы, математические функции

-- Задание
-- В конце года цену всех книг на складе пересчитывают – снижают ее на 30%. 
-- Написать SQL запрос, который из таблицы book выбирает названия, авторов, количества и вычисляет новые цены книг. 
-- Столбец с новой ценой назвать new_price, цену округлить до 2-х знаков после запятой.

select title, author, amount,
round((price-price*0.3), 2) as new_price
from book;

-- Результат:
-- +-----------------------+------------------+--------+-----------+
-- | title                 | author           | amount | new_price |
-- +-----------------------+------------------+--------+-----------+
-- | Мастер и Маргарита    | Булгаков М.А.    | 3      | 469.69    |
-- | Белая гвардия         | Булгаков М.А.    | 5      | 378.35    |
-- | Идиот                 | Достоевский Ф.М. | 10     | 322.00    |
-- | Братья Карамазовы     | Достоевский Ф.М. | 2      | 559.31    |
-- | Стихотворения и поэмы | Есенин С.А.      | 15     | 455.00    |
-- +-----------------------+------------------+--------+-----------+

-- Выборка данных, вычисляемые столбцы, логические функции

Задание
-- При анализе продаж книг выяснилось, что наибольшей популярностью пользуются книги Михаила Булгакова, на втором месте книги Сергея Есенина. 
-- Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. 
-- Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. 
-- Значение округлить до двух знаков после запятой.

select author, title,
round(if(author = 'Булгаков М.А.', price * 1.1, if(author = 'Есенин С.А.', price * 1.05, price * 1)), 2) as new_price
from book;

-- Результат:

-- +------------------+-----------------------+-----------+
-- | author           | title                 | new_price |
-- +------------------+-----------------------+-----------+
-- | Булгаков М.А.    | Мастер и Маргарита    | 738.09    |
-- | Булгаков М.А.    | Белая гвардия         | 594.55    |
-- | Достоевский Ф.М. | Идиот                 | 460.00    |
-- | Достоевский Ф.М. | Братья Карамазовы     | 799.01    |
-- | Есенин С.А.      | Стихотворения и поэмы | 682.50    |

-- Выборка данных по условию

-- Задание
-- Вывести автора, название  и цены тех книг, количество которых меньше 10.

select author, title, price 
from book 
where amount < 10;

-- Результат:

-- +------------------+--------------------+--------+
-- | author           | title              | price  |
-- +------------------+--------------------+--------+
-- | Булгаков М.А.    | Мастер и Маргарита | 670.99 |
-- | Булгаков М.А.    | Белая гвардия      | 540.50 |
-- | Достоевский Ф.М. | Братья Карамазовы  | 799.01 |
-- +------------------+--------------------+--------+

-- Выборка данных, логические операции

-- Задание
-- Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, 
-- а стоимость всех экземпляров этих книг больше или равна 5000.

select title, author, price, amount
from book 
where (price < 500 or price > 600) and price * amount >= 5000;

-- Результат:

-- +-----------------------+-------------+--------+--------+
-- | title                 | author      | price  | amount |
-- +-----------------------+-------------+--------+--------+
-- | Стихотворения и поэмы | Есенин С.А. | 650.00 | 15     |
-- +-----------------------+-------------+--------+--------+

-- Выборка данных, операторы BETWEEN, IN

-- Задание
-- Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .

select title, author
from book 
where price between 540.50 and 800 and amount in (2, 3, 5, 7);

-- Результат:
-- +--------------------+------------------+
-- | title              | author           |
-- +--------------------+------------------+
-- | Мастер и Маргарита | Булгаков М.А.    |
-- | Белая гвардия      | Булгаков М.А.    |
-- | Братья Карамазовы  | Достоевский Ф.М. |
-- +--------------------+------------------+

-- Выборка данных с сортировкой

-- Задание
-- Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). 
-- Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).

select author, title
from book
where amount between 2 and 14 
order by author desc, title;

-- Результат:
-- +------------------+--------------------+
-- | author           | title              |
-- +------------------+--------------------+
-- | Достоевский Ф.М. | Братья Карамазовы  |
-- | Достоевский Ф.М. | Идиот              |
-- | Булгаков М.А.    | Белая гвардия      |
-- | Булгаков М.А.    | Мастер и Маргарита |
-- +------------------+--------------------+

-- Выборка данных, оператор LIKE

-- Задание
-- -- Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
-- Считать, что в названии слова отделяются друг от друга пробелами и не содержат знаков препинания, между фамилией автора и инициалами обязателен пробел, инициалы записываются без пробела в формате: буква, точка, буква, точка. 
-- Информацию отсортировать по названию книги в алфавитном порядке.

select title, author from book
where title like '_% _%'
and author like '%С.%'
order by title;

-- Результат:
-- +-----------------------+-------------+
-- | title                 | author      |
-- +-----------------------+-------------+
-- | Капитанская дочка     | Пушкин А.С. |
-- | Стихотворения и поэмы | Есенин С.А. |

-- 1.3 Запросы, групповые операции

-- Выбор уникальных элементов столбца

-- Задание
-- Отобрать различные (уникальные) элементы столбца amount таблицы book.

select amount from book
group by amount;

-- Query result:
-- +--------+
-- | amount |
-- +--------+
-- | 3      |
-- | 5      |
-- | 10     |
-- | 15     |
-- +--------+
-- Affected rows: 4

-- Выборка данных, групповые функции SUM и COUNT

-- Задание
-- Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  
-- Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.

select author as 'Автор', count(author) as 'Различных_книг', sum(amount) as 'Количество_экземпляров' from book
group by author;

-- Query result:
-- +------------------+----------------+------------------------+
-- | Автор            | Различных_книг | Количество_экземпляров |
-- +------------------+----------------+------------------------+
-- | Булгаков М.А.    | 2              | 8                      |
-- | Достоевский Ф.М. | 3              | 23                     |
-- | Есенин С.А.      | 1              | 15                     |
-- +------------------+----------------+------------------------+
-- Affected rows: 3

-- Выборка данных, групповые функции MIN, MAX и AVG

-- Задание
-- Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . 
-- Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.

select author, min(price) as 'Минимальная_цена', max(price) as 'Максимальная_цена', avg(price) as 'Средняя_цена' from book
group by author;

-- Query result:
-- +------------------+------------------+-------------------+--------------+
-- | author           | Минимальная_цена | Максимальная_цена | Средняя_цена |
-- +------------------+------------------+-------------------+--------------+
-- | Булгаков М.А.    | 540.50           | 670.99            | 605.745000   |
-- | Достоевский Ф.М. | 460.00           | 799.01            | 579.836667   |
-- | Есенин С.А.      | 650.00           | 650.00            | 650.000000   |
-- +------------------+------------------+-------------------+--------------+
-- Affected rows: 3

-- Вычисления по таблице целиком

-- Задание
-- Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. 
-- Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. 
-- Среднюю цену округлить до двух знаков после запятой.

select min(distinct price) as 'Минимальная_цена',
max(distinct price) as 'Максимальная_цена',
round(avg(distinct price), 2) as 'Средняя_цена'
from book;

-- Query result:
-- +------------------+-------------------+--------------+
-- | Минимальная_цена | Максимальная_цена | Средняя_цена |
-- +------------------+-------------------+--------------+
-- | 460.00           | 799.01            | 600.17       |
-- +------------------+-------------------+--------------+
-- Affected rows: 1

-- Выборка данных по условию, групповые функции

-- Задание
-- Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. 
-- Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.

select round(avg(price), 2) as 'Средняя_цена',
round(sum(price * amount), 2) as 'Стоимость'
from book 
where amount between 5 and 14;

-- Query result:
-- +--------------+-----------+
-- | Средняя_цена | Стоимость |
-- +--------------+-----------+
-- | 493.67       | 12107.50  |
-- +--------------+-----------+
-- Affected rows: 1

-- Выборка данных по условию, групповые функции, WHERE и HAVING

-- Задание
-- Посчитать стоимость всех экземпляров каждого автора без учета книг «Идиот» и «Белая гвардия». 
-- В результат включить только тех авторов, у которых суммарная стоимость книг (без учета книг «Идиот» и «Белая гвардия») более 5000 руб. 
-- Вычисляемый столбец назвать Стоимость. Результат отсортировать по убыванию стоимости.

select author,
sum(price * amount) as 'Стоимость'
from book
where title <> 'Идиот' and title <> 'Белая гвардия'
group by author 
having sum(price * amount) > 5000
order by sum(price * amount) desc;

-- Query result:
-- +------------------+-----------+
-- | author           | Стоимость |
-- +------------------+-----------+
-- | Есенин С.А.      | 9750.00   |
-- | Достоевский Ф.М. | 7202.03   |
-- +------------------+-----------+
-- Affected rows: 2

-- 1.4 Вложенные запросы

-- Вложенный запрос, возвращающий одно значение

-- Задание
-- Вывести информацию (автора, название и цену) о  книгах, цены которых меньше или равны средней цене книг на складе. 
-- Информацию вывести в отсортированном по убыванию цены виде. Среднее вычислить как среднее по цене книги.

select author, title, price 
from book 
where price<=(select avg(price) from book)
order by price desc;

-- Query result:
-- +------------------+---------------+--------+
-- | author           | title         | price  |
-- +------------------+---------------+--------+
-- | Булгаков М.А.    | Белая гвардия | 540.50 |
-- | Достоевский Ф.М. | Игрок         | 480.50 |
-- | Достоевский Ф.М. | Идиот         | 460.00 |
-- +------------------+---------------+--------+
-- Affected rows: 3

-- Использование вложенного запроса в выражении

-- Задание
-- Вывести информацию (автора, название и цену) о тех книгах, цены которых превышают минимальную цену книги на складе не более чем на 150 рублей в отсортированном по возрастанию цены виде.

select author, title, price 
from book 
where abs(price - (select min(price) from book))<=150
order by price;

-- Query result:
-- +------------------+----------------+--------+
-- | author           | title          | price  |
-- +------------------+----------------+--------+
-- | Достоевский Ф.М. | Идиот          | 460.00 |
-- | Достоевский Ф.М. | Игрок          | 480.50 |
-- | Булгаков М.А.    | Белая гвардия  | 540.50 |
-- | Пушкин А.С.      | Евгений Онегин | 610.00 |
-- +------------------+----------------+--------+
-- Affected rows: 4

-- Вложенный запрос, оператор IN

-- Задание
-- Вывести информацию (автора, книгу и количество) о тех книгах, количество экземпляров которых в таблице book не дублируется.

SELECT author, title, amount
FROM book
WHERE amount IN (
SELECT amount
FROM book
GROUP by amount
HAVING count(amount)=1);

-- Query result:
-- +---------------+-----------------------+--------+
-- | author        | title                 | amount |
-- +---------------+-----------------------+--------+
-- | Булгаков М.А. | Белая гвардия         | 5      |
-- | Есенин С.А.   | Стихотворения и поэмы | 15     |
-- +---------------+-----------------------+--------+
-- Affected rows: 2

-- Вложенный запрос, операторы ANY и ALL

-- Задание
-- Вывести информацию о книгах(автор, название, цена), цена которых меньше самой большой из минимальных цен, вычисленных для каждого автора.

SELECT author, title, price
FROM book
WHERE price < ANY (
        SELECT min(price) 
        FROM book 
        GROUP BY author 
      );
      
-- Query result:
-- +------------------+---------------+--------+
-- | author           | title         | price  |
-- +------------------+---------------+--------+
-- | Булгаков М.А.    | Белая гвардия | 540.50 |
-- | Достоевский Ф.М. | Идиот         | 460.00 |
-- | Достоевский Ф.М. | Игрок         | 480.50 |
-- +------------------+---------------+--------+
-- Affected rows: 3

-- Вложенный запрос после SELECT

-- Задание
-- Посчитать сколько и каких экземпляров книг нужно заказать поставщикам, чтобы на складе стало одинаковое количество экземпляров каждой книги, равное значению самого большего количества экземпляров одной книги на складе. 
-- Вывести название книги, ее автора, текущее количество экземпляров на складе и количество заказываемых экземпляров книг. 
-- Последнему столбцу присвоить имя Заказ. В результат не включать книги, которые заказывать не нужно.

SELECT title,author,amount,
(SELECT MAX(amount)FROM book)-amount as Заказ
FROM book WHERE ((SELECT MAX(amount)FROM book)-amount) >0;

-- Query result:
-- +--------------------+------------------+--------+-------+
-- | title              | author           | amount | Заказ |
-- +--------------------+------------------+--------+-------+
-- | Мастер и Маргарита | Булгаков М.А.    | 3      | 12    |
-- | Белая гвардия      | Булгаков М.А.    | 5      | 10    |
-- | Идиот              | Достоевский Ф.М. | 10     | 5     |
-- | Братья Карамазовы  | Достоевский Ф.М. | 3      | 12    |
-- | Игрок              | Достоевский Ф.М. | 10     | 5     |
-- +--------------------+------------------+--------+-------+
-- Affected rows: 5

-- 1.5 Запросы корректировки данных

-- Создание пустой таблицы

-- Задание
-- Создать таблицу поставка (supply), которая имеет ту же структуру, что и таблиц book.

-- Поле	        Тип, описание
-- supply_id	INT PRIMARY KEY AUTO_INCREMENT
-- title	    VARCHAR(50)
-- author	    VARCHAR(30)
-- price	    DECIMAL(8, 2)
-- amount	    INT


CREATE TABLE supply(
supply_id INT PRIMARY KEY AUTO_INCREMENT,
title VARCHAR(50),
author VARCHAR(30),
price DECIMAL(8,2),
amount INT
    
-- Добавление записей в таблицу
    
-- Задание
-- Занесите в таблицу supply четыре записи, чтобы получилась следующая таблица:

-- supply_id	title	        author	           price	     amount
-- 1	        Лирика	        Пастернак Б.Л.	   518.99	     2
-- 2	        Черный человек 	Есенин С.А.	       570.20	     6
-- 3	        Белая гвардия	Булгаков М.А.	   540.50	     7
-- 4	        Идиот	        Достоевский Ф.М.   360.80	     3

    
INSERT INTO supply(title, author, price, amount)
VALUES ('Лирика', 'Пастернак Б.Л.', 518.99, 2),
       ('Черный человек', 'Есенин С.А.', 570.20, 6),
       ('Белая гвардия', 'Булгаков М.А.', 540.50, 7),
       ('Идиот', 'Достоевский Ф.М.', 360.80, 3);
SELECT * FROM supply;
    
-- Добавление записей из другой таблицы
    
-- Задание
-- Добавить из таблицы supply в таблицу book, все книги, кроме книг, написанных Булгаковым М.А. и Достоевским Ф.М.
    
    INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
WHERE title NOT IN (
        SELECT title 
        FROM book
        );
SELECT * FROM book;
    
--  Affected rows: 2

-- Query result:
-- +---------+-----------------------+------------------+--------+--------+
-- | book_id | title                 | author           | price  | amount |
-- +---------+-----------------------+------------------+--------+--------+
-- | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
-- | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
-- | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
-- | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
-- | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
-- | 6       | Лирика                | Пастернак Б.Л.   | 518.99 | 2      |
-- | 7       | Черный человек        | Есенин С.А.      | 570.20 | 6      |
-- +---------+-----------------------+------------------+--------+--------+
-- Affected rows: 7
    
-- Добавление записей, вложенные запросы
    
-- Задание
-- Занести из таблицы supply в таблицу book только те книги, авторов которых нет в  book.
    
INSERT INTO book (title, author, price, amount) 
SELECT title, author, price, amount 
FROM supply
WHERE author NOT IN (
        SELECT author 
        FROM book
        );
SELECT * FROM book;
    
-- Affected rows: 1

-- Query result:
-- +---------+-----------------------+------------------+--------+--------+
-- | book_id | title                 | author           | price  | amount |
-- +---------+-----------------------+------------------+--------+--------+
-- | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
-- | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      |
-- | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     |
-- | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
-- | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
-- | 6       | Лирика                | Пастернак Б.Л.   | 518.99 | 2      |
-- +---------+-----------------------+------------------+--------+--------+
-- Affected rows: 6
    
-- Запросы на обновление
    
-- Задание
-- Уменьшить на 10% цену тех книг в таблице book, количество которых принадлежит интервалу от 5 до 10, включая границы.
    
UPDATE book 
SET price = 0.9 * price 
WHERE amount BETWEEN 5 AND 10;
SELECT * FROM book;

-- Query result:
-- +---------+-----------------------+------------------+--------+--------+
-- | book_id | title                 | author           | price  | amount |
-- +---------+-----------------------+------------------+--------+--------+
-- | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
-- | 2       | Белая гвардия         | Булгаков М.А.    | 486.45 | 5      |
-- | 3       | Идиот                 | Достоевский Ф.М. | 414.00 | 10     |
-- | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
-- | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
-- +---------+-----------------------+------------------+--------+--------+
-- Affected rows: 5
    
-- Запросы на обновление нескольких столбцов
    
-- На складе, кроме хранения и получения книг, выполняется их оптовая продажа. 
-- Для реализации этого действия включим дополнительный столбец buy  в таблицу book:
    
-- book_id	                        title	               author	        price	        amount	buy
-- INT PRIMARY KEY AUTO_INCREMENT	VARCHAR(50)	           VARCHAR(30)	    DECIMAL(8,2)	INT	    int
-- 1	                            Мастер и Маргарита	   Булгаков М.А.    670.99	        3	    0
-- 2	                            Белая гвардия	       Булгаков М.А.	540.50	        5	    3
-- 3	                            Идиот	               Достоевский Ф.М.	460.00	        10	    8
-- 4	                            Братья Карамазовы	   Достоевский Ф.М.	799.01	        2	    0
-- 5	                            Стихотворения и поэмы  Есенин С.А.	    650.00	        15	    18

-- Задание
-- В таблице book необходимо скорректировать значение для покупателя в столбце buy таким образом, чтобы оно не превышало количество экземпляров книг, указанных в столбце amount. 
-- А цену тех книг, которые покупатель не заказывал, снизить на 10%.

UPDATE book
SET buy = IF(buy >= amount, amount, buy),
    price = IF(buy = 0, price * 0.9, price);
SELECT * FROM book;
    
-- Affected rows: 3

-- Query result:
-- +---------+-----------------------+------------------+--------+--------+-----+
-- | book_id | title                 | author           | price  | amount | buy |
-- +---------+-----------------------+------------------+--------+--------+-----+
-- | 1       | Мастер и Маргарита    | Булгаков М.А.    | 603.89 | 3      | 0   |
-- | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 5      | 3   |
-- | 3       | Идиот                 | Достоевский Ф.М. | 460.00 | 10     | 8   |
-- | 4       | Братья Карамазовы     | Достоевский Ф.М. | 719.11 | 2      | 0   |
-- | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     | 15  |
-- +---------+-----------------------+------------------+--------+--------+-----+
-- Affected rows: 5

    
-- Запросы на обновление нескольких таблиц 
    
-- Задание
-- Для тех книг в таблице book , которые есть в таблице supply, не только увеличить их количество в таблице book ( увеличить их количество на значение столбца amountтаблицы supply), 
-- но и пересчитать их цену (для каждой книги найти сумму цен из таблиц book и supply и разделить на 2).
    
UPDATE book, supply
SET book.amount = book.amount + supply.amount, 
    book.price = (book.price + supply.price)/2
WHERE book.title = supply.title;
SELECT * FROM book;
    
-- Affected rows: 2

-- Query result:
-- +---------+-----------------------+------------------+--------+--------+
-- | book_id | title                 | author           | price  | amount |
-- +---------+-----------------------+------------------+--------+--------+
-- | 1       | Мастер и Маргарита    | Булгаков М.А.    | 670.99 | 3      |
-- | 2       | Белая гвардия         | Булгаков М.А.    | 540.50 | 12     |
-- | 3       | Идиот                 | Достоевский Ф.М. | 410.40 | 13     |
-- | 4       | Братья Карамазовы     | Достоевский Ф.М. | 799.01 | 2      |
-- | 5       | Стихотворения и поэмы | Есенин С.А.      | 650.00 | 15     |
-- +---------+-----------------------+------------------+--------+--------+
-- Affected rows: 5
    
-- Запросы на удаление
    
-- Задание
-- Удалить из таблицы supply книги тех авторов, общее количество экземпляров книг которых в таблице book превышает 10.    
    
DELETE FROM supply
WHERE author IN(
      SELECT author
      FROM book
      GROUP BY author
      HAVING SUM(amount)>10
      );
    
-- Запросы на создание таблицы
    
-- Задание
-- Создать таблицу заказ (ordering), куда включить авторов и названия тех книг, количество экземпляров которых в таблице book меньше среднего количества экземпляров книг в таблице book. 
-- В таблицу включить столбец amount, в котором для всех книг указать одинаковое значение - среднее количество экземпляров книг в таблице book.

CREATE TABLE ordering AS
SELECT author, title, 
   (SELECT ROUND(AVG(amount)) 
    FROM book) AS amount
FROM book
WHERE amount < (SELECT AVG(amount) 
    FROM book);
SELECT * FROM ordering;
    
-- Affected rows: 3

-- Query result:
-- +------------------+--------------------+--------+
-- | author           | title              | amount |
-- +------------------+--------------------+--------+
-- | Булгаков М.А.    | Мастер и Маргарита | 7      |
-- | Булгаков М.А.    | Белая гвардия      | 7      |
-- | Достоевский Ф.М. | Братья Карамазовы  | 7      |
-- +------------------+--------------------+--------+
-- Affected rows: 3    
    
-- 1.6 Таблица "Командировки", запросы на выборку
    
-- trip_id	                       name	            city	         per_diem	    date_first	    date_last
-- INT PRIMARY KEY AUTO_INCREMENT VARCHAR(30)	    VARCHAR(25)	     DECIMAL(8,2)	DATЕ	        DATE
-- 1	                           Баранов П.Е.	    Москва	         700	        2020-01-12	    2020-01-17
-- 2	                           Абрамова К.А.	Владивосток	     450	        2020-01-14	    2020-01-27
-- 3	                           Семенов И.В.	    Москва	         700	        2020-01-23	    2020-01-31
-- 4	                           Ильиных Г.Р.	    Владивосток	     450	        2020-01-12	    2020-02-02
-- 5	                           Колесов С.П.   	Москва	         700	        2020-02-01	    2020-02-06
-- 6	                           Баранов П.Е.  	Москва	         700	        2020-02-14	    2020-02-22
-- 7	                           Абрамова К.А.	Москва	         700	        2020-02-23	    2020-03-01
-- 8	                           Лебедев Т.К. 	Москва	         700	        2020-03-03	    2020-03-06
-- 9	                           Колесов С.П. 	Новосибирск	     450	        2020-02-27	    2020-03-12
-- 10	                           Семенов И.В.	    Санкт-Петербург	 700	        2020-03-29	    2020-04-05
-- 11	                           Абрамова К.А.	Москва	         700	        2020-04-06	    2020-04-14
-- 12	                           Баранов П.Е.	    Новосибирск	     450	        2020-04-18	    2020-05-04
-- 13	                           Лебедев Т.К.	    Томск	         450	        2020-05-20	    2020-05-31
-- 14	                           Семенов И.В.	    Санкт-Петербург	 700	        2020-06-01	    2020-06-03
-- 15	                           Абрамова К.А.	Санкт-Петербург	 700	        2020-05-28	    2020-06-04
-- 16	                           Федорова А.Ю.	Новосибирск	     450	        2020-05-25	    2020-06-04
-- 17	                           Колесов С.П.	    Новосибирск	     450	        2020-06-03	    2020-06-12
-- 18	                           Федорова А.Ю.	Томск	         450	        2020-06-20	    2020-06-26
-- 19	                           Абрамова К.А.	Владивосток	     450	        2020-07-02	    2020-07-13
-- 20	                           Баранов П.Е.	    Воронеж	         450	        2020-07-19	    2020-07-25
    
-- Задание
-- Вывести из таблицы trip информацию о командировках тех сотрудников, фамилия которых заканчивается на букву «а», в отсортированном по убыванию даты последнего дня командировки виде. 
-- В результат включить столбцы name, city, per_diem, date_first, date_last.
    
SELECT name, city, per_diem, date_first, date_last
FROM trip
WHERE name LIKE "%а %"
ORDER BY date_last DESC;
    
-- Query result:
-- +---------------+-----------------+----------+------------+------------+
-- | name          | city            | per_diem | date_first | date_last  |
-- +---------------+-----------------+----------+------------+------------+
-- | Абрамова К.А. | Владивосток     | 450.00   | 2020-07-02 | 2020-07-13 |
-- | Федорова А.Ю. | Томск           | 450.00   | 2020-06-20 | 2020-06-26 |
-- | Абрамова К.А. | Санкт-Петербург | 700.00   | 2020-05-28 | 2020-06-04 |
-- | Федорова А.Ю. | Новосибирск     | 450.00   | 2020-05-25 | 2020-06-04 |
-- | Абрамова К.А. | Москва          | 700.00   | 2020-04-06 | 2020-04-14 |
-- | Абрамова К.А. | Москва          | 700.00   | 2020-02-23 | 2020-03-01 |
-- | Абрамова К.А. | Владивосток     | 450.00   | 2020-01-14 | 2020-01-27 |
-- +---------------+-----------------+----------+------------+------------+
-- Affected rows: 7
    
-- Задание
-- Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, которые были в командировке в Москве.
    
SELECT DISTINCT name
FROM trip
WHERE city = 'Москва'
ORDER BY name;
    
-- Query result:
-- +---------------+
-- | name          |
-- +---------------+
-- | Абрамова К.А. |
-- | Баранов П.Е.  |
-- | Колесов С.П.  |
-- | Лебедев Т.К.  |
-- | Семенов И.В.  |
-- +---------------+
-- Affected rows: 5
    
-- Задание
-- Для каждого города посчитать, сколько раз сотрудники в нем были.  Информацию вывести в отсортированном в алфавитном порядке по названию городов. 
-- Вычисляемый столбец назвать Количество. 
    
SELECT city, 
    (SELECT COUNT(city)) 
     AS Количество
FROM trip
GROUP BY city 
ORDER BY city;
    
-- Query result:
-- +-----------------+------------+
-- | city            | Количество |
-- +-----------------+------------+
-- | Владивосток     | 3          |
-- | Воронеж         | 1          |
-- | Москва          | 7          |
-- | Новосибирск     | 4          |
-- | Санкт-Петербург | 3          |
-- | Томск           | 2          |
-- +-----------------+------------+
-- Affected rows: 6
    
-- Задание
-- Вывести два города, в которых чаще всего были в командировках сотрудники. Вычисляемый столбец назвать Количество.
    
SELECT city, COUNT(city) AS Количество
FROM trip
GROUP BY city
ORDER BY Количество DESC
LIMIT 2;
    
-- Query result:
-- +-------------+------------+
-- | city        | Количество |
-- +-------------+------------+
-- | Москва      | 7          |
-- | Новосибирск | 4          |
-- +-------------+------------+
-- Affected rows: 2
    
-- Задание
-- Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга (фамилии и инициалы сотрудников, город ,  длительность командировки в днях, при этом первый и последний день относится к периоду командировки). Последний столбец назвать Длительность. 
-- Информацию вывести в упорядоченном по убыванию длительности поездки, а потом по убыванию названий городов (в обратном алфавитном порядке).

SELECT name, city, 
    DATEDIFF(date_last, date_first) + 1 AS Длительность
FROM trip
WHERE city NOT IN ('Москва', 'Санкт-Петербург')
ORDER BY Длительность DESC;
    
-- Query result:
-- +---------------+-------------+--------------+
-- | name          | city        | Длительность |
-- +---------------+-------------+--------------+
-- | Ильиных Г.Р.  | Владивосток | 22           |
-- | Баранов П.Е.  | Новосибирск | 17           |
-- | Колесов С.П.  | Новосибирск | 15           |
-- | Абрамова К.А. | Владивосток | 14           |
-- | Лебедев Т.К.  | Томск       | 12           |
-- | Абрамова К.А. | Владивосток | 12           |
-- | Федорова А.Ю. | Новосибирск | 11           |
-- | Колесов С.П.  | Новосибирск | 10           |
-- | Федорова А.Ю. | Томск       | 7            |
-- | Баранов П.Е.  | Воронеж     | 7            |
-- +---------------+-------------+--------------+
-- Affected rows: 10

    
-- Задание
-- Вывести информацию о командировках сотрудника(ов), которые были самыми короткими по времени. В результат включить столбцы name, city, date_first, date_last.
    
SELECT name, city, date_first, date_last
FROM trip
WHERE DATEDIFF(date_last, date_first) = (
    SELECT MIN(DATEDIFF(date_last, date_first))
    FROM trip);
    
-- Query result:
-- +--------------+-----------------+------------+------------+
-- | name         | city            | date_first | date_last  |
-- +--------------+-----------------+------------+------------+
-- | Семенов И.В. | Санкт-Петербург | 2020-06-01 | 2020-06-03 |
-- +--------------+-----------------+------------+------------+
-- Affected rows: 1
    
-- Задание
-- Вывести информацию о командировках, начало и конец которых относятся к одному месяцу (год может быть любой). 
-- В результат включить столбцы name, city, date_first, date_last. Строки отсортировать сначала  в алфавитном порядке по названию города, а затем по фамилии сотрудника .

SELECT name, city, date_first, date_last
FROM trip
WHERE MONTH(date_first) = MONTH(date_last)
ORDER BY city, name;
    
-- Query result:
-- +---------------+-----------------+------------+------------+
-- | name          | city            | date_first | date_last  |
-- +---------------+-----------------+------------+------------+
-- | Абрамова К.А. | Владивосток     | 2020-01-14 | 2020-01-27 |
-- | Абрамова К.А. | Владивосток     | 2020-07-02 | 2020-07-13 |
-- | Баранов П.Е.  | Воронеж         | 2020-07-19 | 2020-07-25 |
-- | Абрамова К.А. | Москва          | 2020-04-06 | 2020-04-14 |
-- | Баранов П.Е.  | Москва          | 2020-01-12 | 2020-01-17 |
-- | Баранов П.Е.  | Москва          | 2020-02-14 | 2020-02-22 |
-- | Колесов С.П.  | Москва          | 2020-02-01 | 2020-02-06 |
-- | Лебедев Т.К.  | Москва          | 2020-03-03 | 2020-03-06 |
-- | Семенов И.В.  | Москва          | 2020-01-23 | 2020-01-31 |
-- | Колесов С.П.  | Новосибирск     | 2020-06-03 | 2020-06-12 |
-- | Семенов И.В.  | Санкт-Петербург | 2020-06-01 | 2020-06-03 |
-- | Лебедев Т.К.  | Томск           | 2020-05-20 | 2020-05-31 |
-- | Федорова А.Ю. | Томск           | 2020-06-20 | 2020-06-26 |
-- +---------------+-----------------+------------+------------+
-- Affected rows: 13
    
-- Задание
-- Вывести название месяца и количество командировок для каждого месяца. Считаем, что командировка относится к некоторому месяцу, если она началась в этом месяце. 
-- Информацию вывести сначала в отсортированном по убыванию количества, а потом в алфавитном порядке по названию месяца виде. Название столбцов – Месяц и Количество.

SELECT MONTHNAME(date_first) AS Месяц, 
    COUNT(MONTHNAME(date_first)) AS Количество
FROM trip
GROUP BY 1
ORDER BY 2 DESC, 1;
    
-- Query result:
-- +----------+------------+
-- | Месяц    | Количество |
-- +----------+------------+
-- | February | 4          |
-- | January  | 4          |
-- | June     | 3          |
-- | May      | 3          |
-- | April    | 2          |
-- | July     | 2          |
-- | March    | 2          |
-- +----------+------------+
-- Affected rows: 7
    
-- Задание
-- Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок, первый день которых пришелся на февраль или март 2020 года. 
-- Значение суточных для каждой командировки занесено в столбец per_diem. Вывести фамилию и инициалы сотрудника, город, первый день командировки и сумму суточных. 
-- Последний столбец назвать Сумма. Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников, а затем по убыванию суммы суточных.

SELECT name, city, date_first, 
    DATEDIFF(date_last + 1, date_first) * per_diem AS Сумма
FROM trip
WHERE (MONTH(date_first) = 2 OR MONTH(date_first) = 3) 
    AND YEAR(date_first) = 2020
ORDER BY name, Сумма DESC;
    
-- Query result:
-- +---------------+-----------------+------------+---------+
-- | name          | city            | date_first | Сумма   |
-- +---------------+-----------------+------------+---------+
-- | Абрамова К.А. | Москва          | 2020-02-23 | 5600.00 |
-- | Баранов П.Е.  | Москва          | 2020-02-14 | 6300.00 |
-- | Колесов С.П.  | Новосибирск     | 2020-02-27 | 6750.00 |
-- | Колесов С.П.  | Москва          | 2020-02-01 | 4200.00 |
-- | Лебедев Т.К.  | Москва          | 2020-03-03 | 2800.00 |
-- | Семенов И.В.  | Санкт-Петербург | 2020-03-29 | 5600.00 |
-- +---------------+-----------------+------------+---------+
-- Affected rows: 6
    
-- Задание
-- Вывести фамилию с инициалами и общую сумму суточных, полученных за все командировки для тех сотрудников, которые были в командировках больше чем 3 раза, в отсортированном по убыванию сумм суточных виде. 
-- Последний столбец назвать Сумма.

-- Только для этого задания изменена строка таблицы trip:

-- 4	Ильиных Г.Р.  Владивосток	450	2020-01-12	2020-03-02
    
SELECT name, 
    SUM((DATEDIFF(date_last + 1, date_first) * per_diem)) AS Сумма
FROM trip
WHERE name IN (
    SELECT name
    FROM trip
    GROUP BY name
    HAVING COUNT(name) > 3
    )
GROUP BY 1
ORDER BY 2 DESC;
    
-- Query result:
-- +---------------+----------+
-- | name          | Сумма    |
-- +---------------+----------+
-- | Абрамова К.А. | 29200.00 |
-- | Баранов П.Е.  | 21300.00 |
-- +---------------+----------+
-- Affected rows: 2
    
-- 2. Запросы SQL к связанным таблицам 
    
-- 2.1 Связи между таблицами
    
-- Задание
-- Создать таблицу author следующей структуры:

-- Поле	        Тип, описание
-- author_id	    INT PRIMARY KEY AUTO_INCREMENT
-- name_author	    VARCHAR(50)
    
create table author(
    author_id int primary key auto_increment, 
    name_author varchar(50));
    
-- Задание
-- Заполнить таблицу author. В нее включить следующих авторов:

-- Булгаков М.А.
-- Достоевский Ф.М.
-- Есенин С.А.
-- Пастернак Б.Л.
    
INSERT INTO author (name_author)
VALUES ('Булгаков М.А.'), ('Достоевский Ф.М.'), ('Есенин С.А.'), ('Пастернак Б.Л.')
    
-- Задание

-- Поле	      Тип, описание	                     Связи
-- book_id	      INT PRIMARY KEY AUTO_INCREMENT	 
-- title	      VARCHAR(50)	 
-- author_id	  INT 	                             внешний ключ:
--                                                  главная таблица author,
--                                                  связанный столбец author.author_id,
--                                                  пустое значение не допускается
-- price	      DECIMAL(8, 2)	 
-- amount	      INT	 
    


-- Поле	        Тип, описание
-- genre_id	    INT PRIMARY KEY AUTO_INCREMENT
-- name_genre	VARCHAR(30)
    
CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(50),
    author_id INT NOT NULL,
    genre_id INT,
    price DECIMAL(8,2),
    amount INT,
    FOREIGN KEY (author_id) REFERENCES author (author_id),
    FOREIGN KEY (genre_id) REFERENCES genre (genre_id)
    );
    
-- Задание
-- Создать таблицу book той же структуры, что и на предыдущем шаге. Будем считать, что при удалении автора из таблицы author, должны удаляться все записи о книгах из таблицы book, написанные этим автором. 
-- А при удалении жанра из таблицы genre для соответствующей записи book установить значение Null в столбце genre_id. 
    
CREATE TABLE book (
    book_id INT PRIMARY KEY AUTO_INCREMENT, 
    title VARCHAR(50), 
    author_id INT NOT NULL,
    genre_id INT,
    price DECIMAL(8,2), 
    amount INT, 
    FOREIGN KEY (author_id)  REFERENCES author (author_id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id)  REFERENCES genre (genre_id) ON DELETE SET NULL
);
    
-- Задание
-- Добавьте три последние записи (с ключевыми значениями 6, 7, 8) в таблицу book, первые 5 записей уже добавлены:

-- book_id	        title	               author_id	genre_id	price	amount
-- 1	            Мастер и Маргарита	   1	        1	        670.99	3
-- 2	            Белая гвардия	       1	        1	        540.50	5
-- 3	            Идиот	               2	        1	        460.00	10
-- 4	            Братья Карамазовы	   2	        1	        799.01	3
-- 5	            Игрок	               2	        1	        480.50	10
-- 6	            Стихотворения и поэмы  3	        2	        650.00	15
-- 7	            Черный человек	       3	        2	        570.20	6
-- 8	            Лирика	               4	        2	        518.99	2
    
INSERT INTO book(title, author_id,    genre_id, price, amount)
VALUES
    ('Стихотворения и поэмы', 3, 2, 650.00, 15),
    ('Черный человек', 3, 2, 570.20, 6),
    ('Лирика', 4, 2, 518.99, 2)
;
SELECT * FROM book;
    
-- Affected rows: 3

-- Query result:
-- +---------+-----------------------+-----------+----------+--------+--------+
-- | book_id | title                 | author_id | genre_id | price  | amount |
-- +---------+-----------------------+-----------+----------+--------+--------+
-- | 1       | Мастер и Маргарита    | 1         | 1        | 670.99 | 3      |
-- | 2       | Белая гвардия         | 1         | 1        | 540.50 | 5      |
-- | 3       | Идиот                 | 2         | 1        | 460.00 | 10     |
-- | 4       | Братья Карамазовы     | 2         | 1        | 799.01 | 3      |
-- | 5       | Игрок                 | 2         | 1        | 480.50 | 10     |
-- | 6       | Стихотворения и поэмы | 3         | 2        | 650.00 | 15     |
-- | 7       | Черный человек        | 3         | 2        | 570.20 | 6      |
-- | 8       | Лирика                | 4         | 2        | 518.99 | 2      |
-- +---------+-----------------------+-----------+----------+--------+--------+
-- Affected rows: 8

-- 2.2 Запросы на выборку, соединение таблиц
    
-- Соединение INNER JOIN
    
-- Задание
-- Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.

SELECT title, name_genre, price
FROM 
    genre INNER JOIN book
    ON genre.genre_id = book.genre_id
WHERE book.amount >= 8
ORDER BY price DESC;
    
-- Query result:
-- +-----------------------+------------+--------+
-- | title                 | name_genre | price  |
-- +-----------------------+------------+--------+
-- | Стихотворения и поэмы | Поэзия     | 650.00 |
-- | Игрок                 | Роман      | 480.50 |
-- | Идиот                 | Роман      | 460.00 |
-- +-----------------------+------------+--------+
-- Affected rows: 3
    
-- Внешнее соединение LEFT и RIGHT OUTER JOIN
    
-- Задание
-- Вывести все жанры, которые не представлены в книгах на складе.
    
SELECT name_genre
FROM genre g LEFT JOIN book b
    ON g.genre_id = b.genre_id
WHERE title IS NULL;

-- Query result:
-- +-------------+
-- | name_genre  |
-- +-------------+
-- | Приключения |
-- +-------------+
-- Affected rows: 1
    
-- Перекрестное соединение CROSS JOIN
    
-- Задание
-- Есть список городов, хранящийся в таблице city:

-- city_id	   name_city
-- 1	       Москва
-- 2	       Санкт-Петербург
-- 3	       Владивосток
    
-- Необходимо в каждом городе провести выставку книг каждого автора в течение 2020 года. 
-- Дату проведения выставки выбрать случайным образом. Создать запрос, который выведет город, автора и дату проведения выставки. 
-- Последний столбец назвать Дата. Информацию вывести, отсортировав сначала в алфавитном порядке по названиям городов, а потом по убыванию дат проведения выставок.
    
SELECT name_city, name_author, 
    DATE_ADD('2020-01-01', INTERVAL RAND()*365 DAY) AS Дата
FROM city CROSS JOIN author
ORDER BY 1, 3 DESC;
    
-- Query result:
-- +-----------------+------------------+------------+
-- | name_city       | name_author      | Дата       |
-- +-----------------+------------------+------------+
-- | Владивосток     | Есенин С.А.      | 2020-10-22 |
-- | Владивосток     | Достоевский Ф.М. | 2020-05-10 |
-- | Владивосток     | Булгаков М.А.    | 2020-03-30 |
-- | Владивосток     | Лермонтов М.Ю.   | 2020-03-15 |
-- | Владивосток     | Пастернак Б.Л.   | 2020-02-16 |
-- | Москва          | Пастернак Б.Л.   | 2020-11-30 |
-- | Москва          | Достоевский Ф.М. | 2020-09-26 |
-- | Москва          | Лермонтов М.Ю.   | 2020-09-24 |
-- | Москва          | Есенин С.А.      | 2020-09-21 |
-- | Москва          | Булгаков М.А.    | 2020-04-09 |
-- | Санкт-Петербург | Достоевский Ф.М. | 2020-12-17 |
-- | Санкт-Петербург | Есенин С.А.      | 2020-10-30 |
-- | Санкт-Петербург | Пастернак Б.Л.   | 2020-06-16 |
-- | Санкт-Петербург | Лермонтов М.Ю.   | 2020-04-08 |
-- | Санкт-Петербург | Булгаков М.А.    | 2020-01-02 |
-- +-----------------+------------------+------------+
-- Affected rows: 15
    
-- Запросы на выборку из нескольких таблиц
    
-- Задание
--  Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.
    
SELECT name_genre, title, name_author
FROM author a
    INNER JOIN book b ON a.author_id = b.author_id
    INNER JOIN genre g ON g.genre_id = b.genre_id
WHERE name_genre LIKE '%роман%'
ORDER BY title;
    
-- Query result:
-- +------------+--------------------+------------------+
-- | name_genre | title              | name_author      |
-- +------------+--------------------+------------------+
-- | Роман      | Белая гвардия      | Булгаков М.А.    |
-- | Роман      | Братья Карамазовы  | Достоевский Ф.М. |
-- | Роман      | Игрок              | Достоевский Ф.М. |
-- | Роман      | Идиот              | Достоевский Ф.М. |
-- | Роман      | Мастер и Маргарита | Булгаков М.А.    |
-- +------------+--------------------+------------------+
-- Affected rows: 5
    
-- Запросы для нескольких таблиц с группировкой
    
-- Задание
-- Посчитать количество экземпляров  книг каждого автора из таблицы author. 
-- Вывести тех авторов,  количество книг которых меньше 10, в отсортированном по возрастанию количества виде. Последний столбец назвать Количество.
    
SELECT name_author, SUM(amount) AS Количество
FROM 
    author LEFT JOIN book
    on author.author_id = book.author_id
GROUP BY name_author
HAVING SUM(amount) < 10 OR SUM(amount) IS NULL
ORDER BY 2;  
    
-- Query result:
-- +----------------+------------+
-- | name_author    | Количество |
-- +----------------+------------+
-- | Лермонтов М.Ю. | NULL       |
-- | Пастернак Б.Л. | 2          |
-- | Булгаков М.А.  | 8          |
-- +----------------+------------+
-- Affected rows: 3
    
-- Запросы для нескольких таблиц со вложенными запросами
    
-- Задание
-- Вывести в алфавитном порядке всех авторов, которые пишут только в одном жанре. Поскольку у нас в таблицах так занесены данные, что у каждого автора книги только в одном жанре,  для этого запроса внесем изменения в таблицу book. 
-- Пусть у нас  книга Есенина «Черный человек» относится к жанру «Роман», а книга Булгакова «Белая гвардия» к «Приключениям» (эти изменения в таблицы уже внесены).

SELECT name_author
FROM book b INNER JOIN author a
ON b.author_id=a.author_id
GROUP BY name_author
HAVING COUNT(DISTINCT(genre_id))=1
    
-- Query result:
-- +------------------+
-- | name_author      |
-- +------------------+
-- | Достоевский Ф.М. |
-- | Пастернак Б.Л.   |
-- +------------------+
-- Affected rows: 2
    
-- Операция соединение, использование USING()
    
-- Задание
-- Если в таблицах supply  и book есть одинаковые книги, которые имеют равную цену,  вывести их название и автора, 
-- а также посчитать общее количество экземпляров книг в таблицах supply и book,  столбцы назвать Название, Автор  и Количество.
    
SELECT title AS Название, name_author AS Автор, SUM(book.amount + supply.amount) AS Количество
FROM supply 
INNER JOIN book USING(price,title)
INNER JOIN author ON author.name_author = supply.author
GROUP BY author.name_author, book.title;
    
-- Query result:
-- +----------------+-------------+------------+
-- | Название       | Автор       | Количество |
-- +----------------+-------------+------------+
-- | Черный человек | Есенин С.А. | 12         |
-- +----------------+-------------+------------+
-- Affected rows: 1
    





